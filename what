/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef WHAT_
# define WHAT_

const char *shader_2_frag =
 "#version 420\n"
 "out vec4 f;"
 "in vec4 gl_Color;"
 "uniform vec2 res;"
 "uniform float envelope,improve;"
 "layout(size4x32,binding=0)uniform image2D imageTexture;"
 "layout(binding=1)uniform sampler2D imageSampler;"
 "layout(size4x32,binding=1)uniform image2D imageTexture2;"
 "layout(binding=2)uniform sampler2D imageSampler2;"
 "layout(size4x32,binding=2)uniform image2D outTexture;"
 "layout(binding=3)uniform sampler2D outSampler;\n"
 "#define MIN_DIST 0.01\n"
 "#define STEP_MULTIPLIER 0.9\n"
 "#define NORMAL_OFFSET 0.01\n"
 "#define MAX_STEPS 64\n"
 "#define MAX_STEPS_SHADOW 32\n"
 "#define SHADOW_OFFSET 0.02\n"
 "#define SHADOW_HARDNESS 32.0\n"
 "float v(vec2 v)"
 "{"
   "return fract(sin(dot(v.rg,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "vec4 v()"
 "{"
   "float g=gl_Color.r*3000.*10.;"
   "vec2 i=(2.*gl_FragCoord.rg-res)/min(res.r,res.g)*.5;"
   "float s=g*28.,r=floor(s),a=fract(s),c=1.;"
   "for(float n=1.;n<150.;n+=1.)"
     "{"
       "float b=n-a,e=n+r,l=(v(vec2(e,1.))*2.-1.)*.5,m=v(vec2(e,1.))*2.*3.14159+l*g,d=v(vec2(e,3.))*4.+1.,o=v(vec2(e,4.))*.5+1.4,T=v(vec2(e,5.))*.5+.7,S=v(vec2(e,6.))*.5+.7;"
       "vec2 M=vec2(sin(e*.005)+sin(e*.002),cos(e*.005)+cos(e*.002))*b*.002,p=vec2(cos(m),sin(m));"
       "float t=dot(p,i-M)*b,N=dot(vec2(-p.g,p.r),i-M)*b,u=t-d+sin(N*20.)*.05;"
       "if(u>0.)"
         "{"
           "float C=v(vec2(e,7.))*.5+.1,E=v(vec2(e,8.))*2.+2.,k=step(C,length(fract(vec2(t,N)*E)-.5))*.1+.9,R;"
           "if(u<.2)"
             "R=1.2;"
           "else"
             " if(u<.22)"
               "R=.9;"
             "else"
               " R=k;"
           "gl_FragColor=vec4(30.*vec3(o,T,S)*c/(b+30.)*R,1.);"
         "}"
       "else"
         " c*=1.-exp((t-d)*2.)*.2;"
     "}"
   "return vec4(vec3(0.),1.);"
 "}"
 "vec3 n(float v)"
 "{"
   "return vec3(sin(v)+2.*sin(2.*v),cos(v)-2.*cos(2.*v),-sin(3.*v));"
 "}"
 "vec4 n(vec4 v,vec4 r,float g)"
 "{"
   "float i=clamp(.5+.5*(r.a-v.a)/g,0.,1.);"
   "return mix(r,v,i)-vec4(0.,0.,0.,g*i*(1.-i));"
 "}"
 "vec3 s(vec3 v)"
 "{"
   "float g=sin(dot(v,vec3(7,157,113)));"
   "return fract(vec3(2097152,262144,32768)*g);"
 "}"
 "float n(float v,float g)"
 "{"
   "float i=gl_Color.r*3000.*10.;"
   "v*=.4;"
   "return sin(4.*v+3.*sin(2.*g+i+2.*sin(3.*v+i+sin(i*1.4))))*.5+.6;"
 "}"
 "vec4 n()"
 "{"
   "float v=gl_Color.r*3000.*10.;"
   "vec2 i=(2.*gl_FragCoord.rg-res)/min(res.r,res.g);"
   "float g=abs(i.r)*.2;"
   "if(g<.001)"
     "g=.001;"
   "vec3 r=vec3(v,sin(v)*.4+.4,-1.4),s=normalize(vec3(i.r,i.g,1.2-length(i)*.3));"
   "float b=.3;"
   "s.rb=mat2(cos(b),sin(b),-sin(b),cos(b))*s.rb;"
   "vec3 m=vec3(0.,0.,1.);"
   "m.rb=mat2(cos(b),sin(b),-sin(b),cos(b))*m.rb;"
   "float R=atan(r.g,r.b),c=sign(r.b*s.g-r.g*s.b);"
   "for(float l=0.;l<3.14159;l+=.05)"
     "{"
       "float e=c*l+R;"
       "vec3 a=vec3(0.,cos(e),-sin(e));"
       "float S=-dot(r,a)/dot(s,a);"
       "vec3 d=r+s*S;"
       "float t=length(d.gb),o=d.r,u=n(o,e);"
       "if(u>t)"
         "{"
           "float M=.01,N=n(o+M,e),T=n(o,e+M);"
           "vec3 C=vec3(o,u*sin(e),u*cos(e)),p=vec3(o+M,N*sin(e),N*cos(e)),E=vec3(o,T*sin(e+M),T*cos(e+M)),k=(p-C)/M,D=(E-C)/M,z=normalize(cross(k,D));"
           "float x=t*(1.+dot(z,vec3(1.,1.,1.))*.3)+2.*pow(1.-abs(dot(a,normalize(r-C))),3.);"
           "return vec4(pow(x,2.)*vec3(.2,.5,.6),g);"
         "}"
     "}"
   "float e=fract(i.r+i.g/(2.+i.r))>.5?1.:0.;"
   "return vec4(.7+.4*(1.-e),.2*e,.1+.1*e,g*.4);"
 "}"
 "float s(in vec3 v,in vec3 i)"
 "{"
   "return(length(v/i)-1.)*min(min(i.r,i.g),i.b);"
 "}"
 "vec4 n(in vec4 v,in vec3 i,in vec3 e,in vec3 g,in vec3 r,in vec3 b,in float c)"
 "{"
   "float a=s(i-(e+c*g),c*r);"
   "return n(v,vec4(b,a),.02);"
 "}"
 "vec4 s(in float v,in vec4 i,in vec3 g)"
 "{"
   "vec2 s=vec2(sin(v),cos(v));"
   "mat3 b=mat3(s.g,0.,s.r,0.,1.,0.,-s.r,0.,s.g)*mat3(s.g,s.r,0.,-s.r,s.g,0.,0.,0.,1.);"
   "vec3 r=vec3(-.35,.6,-.35),e=vec3(20.8,.8,.1),a=vec3(.8,.8,.1);"
   "float c=.5;"
   "i=n(i,g,r,vec3(0.),vec3(.8,.3,.6),a,c);"
   "i=n(i,g,r,vec3(-.7,.5,0.),vec3(.3),a,c);"
   "i=n(i,g,r,vec3(-1.1,.5,0.),vec3(.1,.02,.1),a,c);"
   "i=n(i,g,r,vec3(-1.1,.6,.05),vec3(.02),e,c);"
   "i=n(i,g,r,vec3(-1.1,.6,-.05),vec3(.02),e,c);"
   "return i;"
 "}"
 "vec4 i(vec3 v)"
 "{"
   "float i=gl_Color.r*3000.*10.,g=gl_Color.g*65536.;"
   "vec4 r=vec4(0.);"
   "r.rgb=vec3(.3*v.g,.3,.3)*(fract(v).r>.5?1.:.2);"
   "r.a=min(min(v.g,-abs(v.b)+2.),-abs(v.r)+2.);"
   "vec4 e=r;"
   "if(g<.1)"
     "{"
       "for(int b=0;b<15;b++)"
         "{"
           "vec3 m=n(i*float(b*.2+1))*.2;"
           "if(b%3==1)"
             "m=m.brg;"
           "if(b%3==2)"
             "m=m.brg;"
           "m.g+=1.2;"
           "float a=.3;"
           "a+=(sin(v.r*40.)+cos(v.b*40.)+sin(v.g*40.))*.01;"
           "a+=(s(v)*.003).r;"
           "vec3 c=vec3(a>.33?200.:.2)*vec3(b*.1,.2+(15-b)*.4,b*.8);"
           "float S=fract(v*5.).b>.5?1.:.2;"
           "c=c*S;"
           "vec4 o=vec4(c,length(m-v)-a);"
           "if(improve<2.)"
             "e=n(e,o,.3+S*improve*.3);"
           "else"
             " e=n(e,o,.3+S*improve*.7);"
         "}"
     "}"
   "if(abs(g-1.)<.1)"
     "{"
       "for(int b=0;b<4;b++)"
         "{"
           "float c=i*(b+1)*(b%b==0?-1:1);"
           "vec2 a=vec2(sin(c),cos(c));"
           "mat3 m=mat3(a.g,0.,a.r,0.,1.,0.,-a.r,0.,a.g)*mat3(a.g,a.r,0.,-a.r,a.g,0.,0.,0.,1.);"
           "vec3 d=s(vec3(b+5))*vec3(.7,1.,.7);"
           "d+=vec3(-.35,0.,-.35);"
           "d.g=b*.3+.6;"
           "vec3 o=200.*vec3(.1+b*.8/4.,.4,.1+(4-b)/4.*.8);"
           "float S=length(max(abs((v-d)*m)-.1,0.))-.08;"
           "e=n(e,vec4(o,S),.02);"
         "}"
     "}"
   "return e;"
 "}"
 "mat4 i(vec3 v,vec3 g,vec3 i)"
 "{"
   "vec3 e=normalize(v-g),r=normalize(cross(i,e)),b=normalize(cross(e,r));"
   "return mat4(vec4(r,-dot(r,v)),vec4(b,-dot(b,v)),vec4(e,-dot(e,v)),vec4(0.,0.,0.,1.));"
 "}"
 "vec3 g=vec3(0.,1.,0.);"
 "vec3 t(float v)"
 "{"
   "float i=v*.2;"
   "return vec3(sin(i)*-1.75,2.4,cos(i)*-1.75);"
 "}"
 "vec4 i(vec2 v,out float b)"
 "{"
   "float e=gl_Color.r*3000.*10.;"
   "vec2 r=(2.*v.rg-res)/res.r;"
   "vec3 a=t(e),c=a;"
   "c.g+=2.;"
   "float m=sin(e*5.);"
   "m=m*m;"
   "a=(vec4(0.,0.,0.,1.)*inverse(i(a,g,vec3(0.,1.,0.)))).rgb;"
   "vec3 o=normalize((vec4(0.,0.,-1.,0.)*inverse(i(a,g,vec3(0.,1.,0.)))).rgb),S=normalize(cross(o,vec3(0.,1.,0.))),T=normalize(cross(S,o)),n=a+o,u=n+r.r*S+r.g*T,l=normalize(u-a);"
   "l+=s(l*.01)*.002;"
   "vec3 d=a;"
   "float M=0.,N=1.,p=float(MAX_STEPS);"
   "for(int C=0;C<MAX_STEPS;C++)"
     "{"
       "N=i(d).a;"
       "M+=N*STEP_MULTIPLIER;"
       "d=a+l*M;"
       "if(N<MIN_DIST)"
         "{"
           "p=float(C);"
           "break;"
         "}"
     "}"
   "vec2 C=vec2(NORMAL_OFFSET,0.);"
   "vec3 R=normalize(vec3(i(d+C.rgg).a-i(d-C.rgg).a,i(d+C.grg).a-i(d-C.grg).a,i(d+C.ggr).a-i(d-C.ggr).a)),k=a+l*M+R*SHADOW_OFFSET,E=k,D=normalize(c-d);"
   "float x=length(c-d),z=1.;"
   "M=0.;"
   "for(int F=0;F<MAX_STEPS_SHADOW;F++)"
     "{"
       "N=i(E).a;"
       "M+=N*STEP_MULTIPLIER;"
       "E=k+D*M;"
       "if(N<MIN_DIST)"
         "{"
           "z=0.;"
           "break;"
         "}"
       "z=min(z,SHADOW_HARDNESS*N/M);"
       "if(M>=x)"
         "{"
           "break;"
         "}"
       "if(F==MAX_STEPS_SHADOW-1)"
         "z=0.;"
     "}"
   "float F=max(0.,dot(R,D))*z+.1;"
   "vec3 A=F*i(d).rgb;"
   "b=length(d-a);"
   "vec4 P=vec4(A.rgb,0.);"
   "float O=.4*abs(1.-length(a-g)/b);"
   "O=max(.05,min(1.75,O));"
   "return vec4(P.rgb,O);"
 "}"
 "void main()"
 "{"
   "vec2 v=gl_FragCoord.rg/res;"
   "float e=gl_Color.r*3000.*10.;"
   "if(gl_Color.a<.5)"
     "{"
       "f=vec4(0.);"
       "float b;"
       "for(int r=0;r<3;r++)"
         "f+=i(gl_FragCoord.rg+s(vec3(r)).rg,b);"
       "f/=3.;"
       "vec3 r=texture(imageSampler2,v.rg).rgb;"
       "if(gl_FragCoord.g<=10)"
         "{"
           "vec3 a=t(e);"
           "mat4 c=i(a,g,vec3(0.,1.,0.));"
           "vec3 o=vec3(0.,2.,0.);"
           "float m=gl_Color.b*10000.;"
           "vec4 d=texture(imageSampler,v.rg),u=d+vec4(r,0.)*m;"
           "vec3 M=u.rgb+o;"
           "vec2 C=vec2(m,0.);"
           "vec3 S=vec3(i(M-C.rgg).a-i(M+C.rgg).a,i(M-C.grg).a-i(M+C.grg).a,i(M-C.ggr).a-i(M+C.ggr).a);"
           "if(i(M).a<0.)"
             "u.rgb-=normalize(S)*m*2.,r=reflect(r,normalize(S))*.8;"
           "r-=vec3(0.,m*10.,0.);"
           "if(length(r)>m*1000.)"
             "r=normalize(r)*m*1000.;"
           "imageStore(imageTexture,ivec2(gl_FragCoord.rg),u);"
           "vec3 R=(vec4(u.rgb+o,1.)*c).rgb;"
           "imageStore(outTexture,ivec2(gl_FragCoord.rg),vec4(R,length(R)));"
         "}"
       "imageStore(imageTexture2,ivec2(gl_FragCoord.rg),vec4(r,b+.01));"
     "}"
   "else"
     "{"
       "float r=texture(imageSampler2,v.rg).a,b=gl_Color.r*1000.;"
       "vec2 c=gl_PointCoord.rg-vec2(.5);"
       "float a=length(c);"
       "if(a>.5||r<b)"
         "{"
           "discard;"
         "}"
       "vec3 m=vec3(.9,.9,.9);"
       "float S=.8*abs(.8/b);"
       "S=max(.05,min(1.75,S));"
       "f=vec4(m*(.5-a),S);"
     "}"
   "float b=gl_Color.g*65536.;"
   "if(abs(b-2.)<.1)"
     "f=n()*vec4(.3,.3,.3,1.);"
 "}";

#endif // WHAT_
